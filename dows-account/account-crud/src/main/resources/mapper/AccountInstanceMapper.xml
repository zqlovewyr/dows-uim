<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.dows.account.mapper.AccountInstanceMapper">

    <select id="getAccountInstanceByUserNameAndTenantId" parameterType="map" resultType="org.dows.account.vo.AccountInstanceVo">
        SELECT
            t1.id,
            t1.account_name,
            t1.avatar,
            t1.phone,
            t1.account_id,
            t2.tenant_id
        FROM
            account_instance t1 left join account_tenant t2 on t1.id = t2.user_id
        WHERE 1=1

        <if test="paramQuery.accountName != null">
            AND t1.account_name = #{paramQuery.accountName}
        </if>
        <if test="paramQuery.tenantId != null">
            AND t2.tenant_id = #{paramQuery.tenantId}
        </if>

    </select>

    <!--分页查询用户基础信息-->
    <select id="selectAccountInstancePage" parameterType="org.dows.account.query.AccountInstanceQuery" resultType="org.dows.account.vo.AccountInstanceResVo">
        SELECT
        t1.id,
        t1.account_id,
        t1.account_name,
        t1.phone,
        t1.store_id,
        t1.dt as create_time,
        t6.name as store_name,
        t2.name,
        t2.sex,
        t5.identifier,
        t2.birthday,
        t2.job,
        t3.org_name,
        t4.role_name,
        t2.entry_time
        <!-- t3.identifier,-->
        FROM account_instance t1
        left join account_user_info t2 on t1.account_id = t2.account_id
        left join account_group t3 on t1.account_id = t3.account_id
        left join account_role t4 on t1.account_id = t4.principal_id
        left join account_identifier t5 on t1.account_id = t5.account_id

        left join store_instance t6 on t1.store_id = t6.store_id

        <!-- left join account_identifier t3 on t1.account_id = t3.account_id -->
        WHERE 1=1 and t1.deleted = 0
        <if test="accountInstanceQuery.id != null">
            AND t1.id = #{accountInstanceQuery.id}
        </if>
        <if test="accountInstanceQuery.accountId != null and accountInstanceQuery.accountId != ''">
            AND t1.account_id = #{accountInstanceQuery.accountId}
        </if>
        <if test="accountInstanceQuery.name != null and accountInstanceQuery.name != ''">
            AND t2.name = #{accountInstanceQuery.name}
        </if>
        <if test="accountInstanceQuery.gender != null">
            AND t2.sex = #{accountInstanceQuery.gender}
        </if>

        <if test="accountInstanceQuery.orgId != null">
            AND t3.org_id = #{accountInstanceQuery.orgId}
        </if>

        <if test="accountInstanceQuery.job != null">
            AND t2.job = #{accountInstanceQuery.job}
        </if>

        <if test="accountInstanceQuery.storeId != null">
            AND t1.store_id = #{accountInstanceQuery.storeId}
        </if>
        <if test="accountInstanceQuery.roleId != null">
            AND t4.role_id = #{accountInstanceQuery.roleId}
        </if>

        <if test="accountInstanceQuery.entryDateStart != null">
            AND DATE(t2.entry_time) &gt;= #{accountInstanceQuery.entryDateStart}
        </if>
        <if test="accountInstanceQuery.entryDateEnd != null">
            AND DATE(t2.entry_time) &lt;= #{accountInstanceQuery.entryDateEnd}
        </if>
    </select>

    <select id="selectAccountInstanceCount" parameterType="org.dows.account.query.AccountCountTenantQuery" resultType="Integer">

        select COUNT(1) from account_instance ai
        left join order_instance oi on oi.account_id = ai.account_id
        left join store_instance si on si.store_id = ai.store_id
         <where>
             <if test="accountCountTenantQuery.storeName != null and accountCountTenantQuery.storeName != ''">
                 AND si.store_name =  like concat('%',#{accountCountTenantQuery.storeName},'%')
             </if>
             <if test="accountCountTenantQuery.storeBrand != null">
                 AND si.store_brand =  #{accountCountTenantQuery.storeBrand}
             </if>

             <if test="accountCountTenantQuery.storeType != null">
                 AND si.store_type =  #{accountCountTenantQuery.storeType}
             </if>
             <if test="accountCountTenantQuery.storePattern != null">
                 AND si.store_pattern =  #{accountCountTenantQuery.storePattern}
             </if>

             <if test="accountCountTenantQuery.district != null and accountCountTenantQuery.district != ''">
                 AND si.district =  #{accountCountTenantQuery.district}
             </if>

             <if test="accountCountTenantQuery.orderType != null">
                 AND oi.type =  #{accountCountTenantQuery.orderType}
             </if>
             <if test="accountCountTenantQuery.storeId != null and accountCountTenantQuery.storeId != ''">
                 AND ai.store_id = #{accountCountTenantQuery.storeId}
             </if>
             <if test="accountCountTenantQuery.startDate != null">
                 AND DATE(ai.dt) &gt;= #{accountCountTenantQuery.startDate}
             </if>
             <if test="accountCountTenantQuery.endDate != null">
                 AND DATE(ai.dt) &lt;= #{accountCountTenantQuery.endDate}
             </if>
         </where>
    </select>

    <select id="selectAccountInstanceConsumeCount" parameterType="org.dows.account.query.AccountCountTenantQuery" resultType="Integer">

        select COUNT(1) from order_instance oi
        left join account_instance ai on oi.account_id=ai.account_id
        left join store_instance si on si.store_id = ai.store_id
        <where>
            <if test="accountCountTenantQuery.storeName != null and accountCountTenantQuery.storeName != ''">
                AND si.store_name =  like concat('%',#{accountCountTenantQuery.storeName},'%')
            </if>
            <if test="accountCountTenantQuery.storeBrand != null">
                AND si.store_brand =  #{accountCountTenantQuery.storeBrand}
            </if>

            <if test="accountCountTenantQuery.storeType != null">
                AND si.store_type =  #{accountCountTenantQuery.storeType}
            </if>
            <if test="accountCountTenantQuery.storePattern != null">
                AND si.store_pattern =  #{accountCountTenantQuery.storePattern}
            </if>

            <if test="accountCountTenantQuery.district != null and accountCountTenantQuery.district != ''">
                AND si.district =  #{accountCountTenantQuery.district}
            </if>

            <if test="accountCountTenantQuery.orderType != null">
                AND oi.type =  #{accountCountTenantQuery.orderType}
            </if>
            <if test="accountCountTenantQuery.storeId != null and accountCountTenantQuery.storeId != ''">
                AND oi.store_id = #{accountCountTenantQuery.storeId}
            </if>
            <if test="accountCountTenantQuery.startDate != null">
                AND DATE(oi.dt) &gt;= #{accountCountTenantQuery.startDate}
            </if>
            <if test="accountCountTenantQuery.endDate != null">
                AND DATE(oi.dt) &lt;= #{accountCountTenantQuery.endDate}
            </if>
            and oi.pay_state = 1 and oi.refund <![CDATA[ <> ]]> 1
        </where>
    </select>


    <select id="selectAccountInstanceStoredCount" parameterType="org.dows.account.query.AccountCountTenantQuery" resultType="Integer">

        select COUNT(1) from market_instance ma
        left join order_instance oi on oi.account_id = ma.account_id
        left join store_instance si on si.store_id = ma.store_id
        <where>
            <if test="accountCountTenantQuery.storeName != null and accountCountTenantQuery.storeName != ''">
                AND si.store_name =  like concat('%',#{accountCountTenantQuery.storeName},'%')
            </if>
            <if test="accountCountTenantQuery.storeBrand != null">
                AND si.store_brand =  #{accountCountTenantQuery.storeBrand}
            </if>

            <if test="accountCountTenantQuery.storeType != null">
                AND si.store_type =  #{accountCountTenantQuery.storeType}
            </if>
            <if test="accountCountTenantQuery.storePattern != null">
                AND si.store_pattern =  #{accountCountTenantQuery.storePattern}
            </if>

            <if test="accountCountTenantQuery.district != null and accountCountTenantQuery.district != ''">
                AND si.district =  #{accountCountTenantQuery.district}
            </if>

            <if test="accountCountTenantQuery.orderType != null">
                AND oi.type =  #{accountCountTenantQuery.orderType}
            </if>
            <if test="accountCountTenantQuery.storeId != null and accountCountTenantQuery.storeId != ''">
                AND ma.store_id = #{accountCountTenantQuery.storeId}
            </if>
            <if test="accountCountTenantQuery.startDate != null">
                AND DATE(ma.dt) &gt;= #{accountCountTenantQuery.startDate}
            </if>
            <if test="accountCountTenantQuery.endDate != null">
                AND DATE(ma.dt) &lt;= #{accountCountTenantQuery.endDate}
            </if>
            and ma.market_state = 1 and ma.market_name_id = '1623954557644095490'
        </where>
    </select>

    <select id="selectAccountDistributionTenantStatistics" parameterType="org.dows.account.bo.AccountInstanceTenantBo" resultType="org.dows.account.vo.AccountDistributionVo">

        select

        <if test="accountInstanceTenantBo.distributionType == 1">
            case ui.sex
            WHEN 1
            then '男'
            WHEN 2
            then '女'
            else '未知'
            end
        </if>
        <if test="accountInstanceTenantBo.distributionType == 2">
            case ui.chronological
            WHEN '20'
            then '20后'
            WHEN '10'
            then '10后'
            WHEN '00'
            then '00后'
            WHEN '90'
            then '90后'
            WHEN '80'
            then '80后'
            WHEN '70'
            then '70后'
            WHEN '60'
            then '60后'
            else '未知'
            end
        </if>
        <if test="accountInstanceTenantBo.distributionType == 3">
            ui.shengxiao
        </if>
        <if test="accountInstanceTenantBo.distributionType == 4">
            ui.constellation
        </if>
        as name,
        count(1) as count,
        CAST(AVG( oi.amount ) as decimal(10,2)) as amount
        from account_user_info ui
        left join account_instance ai on ui.account_id = ai.account_id
        left join order_instance oi on oi.account_id = ui.account_id
        left join store_instance si on si.store_id = ai.store_id
        <where>

            <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
            </if>
            <if test="accountInstanceTenantBo.storeBrand != null">
                AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
            </if>

            <if test="accountInstanceTenantBo.storeType != null">
                AND si.store_type =  #{accountInstanceTenantBo.storeType}
            </if>
            <if test="accountInstanceTenantBo.storePattern != null">
                AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
            </if>

            <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                AND si.district =  #{accountInstanceTenantBo.district}
            </if>

            <if test="accountInstanceTenantBo.orderType != null">
                AND oi.type =  #{accountInstanceTenantBo.orderType}
            </if>

            <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                AND ai.store_id = #{accountInstanceTenantBo.storeId}
            </if>
            <if test="accountInstanceTenantBo.startDate != null">
                AND DATE(ui.create_time) &gt;= #{accountInstanceTenantBo.startDate}
            </if>
            <if test="accountInstanceTenantBo.endDate != null">
                AND DATE(ui.create_time) &lt;= #{accountInstanceTenantBo.endDate}
            </if>
        </where>
        <if test="accountInstanceTenantBo.distributionType == 1">
            group by ui.sex
        </if>

        <if test="accountInstanceTenantBo.distributionType == 2">
            group by ui.chronological
        </if>

        <if test="accountInstanceTenantBo.distributionType == 3">
            group by ui.shengxiao
        </if>
        <if test="accountInstanceTenantBo.distributionType == 4">
            group by ui.constellation
        </if>
    </select>

    <select id="selectAccountConsumptionTenantStatisticsFrequency" parameterType="org.dows.account.bo.AccountInstanceTenantBo" resultType="org.dows.account.vo.AccountConsumptionVo">

        <if test="accountInstanceTenantBo.frequencyType == 1">
            select
            '0次' as count,
            count(1) as preCount
            from account_instance ai
            left join order_instance oi on oi.account_id=ai.account_id
            left join store_instance si on si.store_id = ai.store_id
            where oi.account_id is null
            <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
            </if>
            <if test="accountInstanceTenantBo.storeBrand != null">
                AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
            </if>

            <if test="accountInstanceTenantBo.storeType != null">
                AND si.store_type =  #{accountInstanceTenantBo.storeType}
            </if>
            <if test="accountInstanceTenantBo.storePattern != null">
                AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
            </if>

            <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                AND si.district =  #{accountInstanceTenantBo.district}
            </if>

            <if test="accountInstanceTenantBo.orderType != null">
                AND oi.type =  #{accountInstanceTenantBo.orderType}
            </if>
            <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                AND ai.store_id = #{accountInstanceTenantBo.storeId}
            </if>
            <if test="accountInstanceTenantBo.startDate != null">
                AND DATE(ai.dt) &gt;= #{accountInstanceTenantBo.startDate}
            </if>
            <if test="accountInstanceTenantBo.endDate != null">
                AND DATE(ai.dt) &lt;= #{accountInstanceTenantBo.endDate}
            </if>
        </if>

        <if test="accountInstanceTenantBo.frequencyType == 2">
            select '1-6次' as count, count(1) as preCount from (
                select oi.account_id from order_instance oi
                left join account_instance ai on oi.account_id=ai.account_id
                left join store_instance si on si.store_id = ai.store_id
                <where>
                    <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                        AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
                    </if>
                    <if test="accountInstanceTenantBo.storeBrand != null">
                        AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
                    </if>

                    <if test="accountInstanceTenantBo.storeType != null">
                        AND si.store_type =  #{accountInstanceTenantBo.storeType}
                    </if>
                    <if test="accountInstanceTenantBo.storePattern != null">
                        AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
                    </if>

                    <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                        AND si.district =  #{accountInstanceTenantBo.district}
                    </if>

                    <if test="accountInstanceTenantBo.orderType != null">
                        AND oi.type =  #{accountInstanceTenantBo.orderType}
                    </if>
                    <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                        AND oi.store_id = #{accountInstanceTenantBo.storeId}
                    </if>
                    <if test="accountInstanceTenantBo.startDate != null">
                        AND DATE(oi.dt) &gt;= #{accountInstanceTenantBo.startDate}
                    </if>
                    <if test="accountInstanceTenantBo.endDate != null">
                        AND DATE(oi.dt) &lt;= #{accountInstanceTenantBo.endDate}
                    </if>
                    and oi.pay_state = 1 and oi.refund <![CDATA[ <> ]]> 1
                    group by oi.account_id HAVING count(oi.account_id) &gt; 0 and count(oi.account_id) &lt; 6
                </where>
            ) tab
        </if>
        <if test="accountInstanceTenantBo.frequencyType == 3">
            select '6-12次' as count, count(1) as preCount from (
            select oi.account_id from order_instance oi
            left join account_instance ai on oi.account_id=ai.account_id
            left join store_instance si on si.store_id = ai.store_id
            <where>
                <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                    AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
                </if>
                <if test="accountInstanceTenantBo.storeBrand != null">
                    AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
                </if>

                <if test="accountInstanceTenantBo.storeType != null">
                    AND si.store_type =  #{accountInstanceTenantBo.storeType}
                </if>
                <if test="accountInstanceTenantBo.storePattern != null">
                    AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
                </if>

                <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                    AND si.district =  #{accountInstanceTenantBo.district}
                </if>

                <if test="accountInstanceTenantBo.orderType != null">
                    AND oi.type =  #{accountInstanceTenantBo.orderType}
                </if>
                <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                    AND oi.store_id = #{accountInstanceTenantBo.storeId}
                </if>
                <if test="accountInstanceTenantBo.startDate != null">
                    AND DATE(oi.dt) &gt;= #{accountInstanceTenantBo.startDate}
                </if>
                <if test="accountInstanceTenantBo.endDate != null">
                    AND DATE(oi.dt) &lt;= #{accountInstanceTenantBo.endDate}
                </if>
                and oi.pay_state = 1 and oi.refund <![CDATA[ <> ]]> 1
                group by oi.account_id HAVING count(oi.account_id) &gt; 5 and count(oi.account_id) &lt; 12
            </where>
            ) tab
        </if>
        <if test="accountInstanceTenantBo.frequencyType == 4">
            select '12次以上' as count, count(1) as preCount from (
            select oi.account_id from order_instance oi
            left join account_instance ai on oi.account_id=ai.account_id
            left join store_instance si on si.store_id = ai.store_id
            <where>
                <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                    AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
                </if>
                <if test="accountInstanceTenantBo.storeBrand != null">
                    AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
                </if>

                <if test="accountInstanceTenantBo.storeType != null">
                    AND si.store_type =  #{accountInstanceTenantBo.storeType}
                </if>
                <if test="accountInstanceTenantBo.storePattern != null">
                    AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
                </if>

                <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                    AND si.district =  #{accountInstanceTenantBo.district}
                </if>

                <if test="accountInstanceTenantBo.orderType != null">
                    AND oi.type =  #{accountInstanceTenantBo.orderType}
                </if>
                <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                    AND oi.store_id = #{accountInstanceTenantBo.storeId}
                </if>
                <if test="accountInstanceTenantBo.startDate != null">
                    AND DATE(oi.dt) &gt;= #{accountInstanceTenantBo.startDate}
                </if>
                <if test="accountInstanceTenantBo.endDate != null">
                    AND DATE(oi.dt) &lt;= #{accountInstanceTenantBo.endDate}
                </if>
                and oi.pay_state = 1 and oi.refund <![CDATA[ <> ]]> 1
                group by oi.account_id HAVING count(oi.account_id) &gt; 12
            </where>
            ) tab
        </if>
    </select>

    <select id="selectAccountConsumptionTenantStatisticsCapacity" parameterType="org.dows.account.bo.AccountInstanceTenantBo" resultType="org.dows.account.vo.AccountConsumptionVo">

            select count(1) as preCount from (
            select oi.account_id from order_instance oi
            left join iff_setting itt on oi.store_id = itt.store_id
            left join account_instance ai on oi.account_id=ai.account_id
            left join store_instance si on si.store_id = ai.store_id
            <where>
                <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                    AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
                </if>
                <if test="accountInstanceTenantBo.storeBrand != null">
                    AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
                </if>

                <if test="accountInstanceTenantBo.storeType != null">
                    AND si.store_type =  #{accountInstanceTenantBo.storeType}
                </if>
                <if test="accountInstanceTenantBo.storePattern != null">
                    AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
                </if>

                <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                    AND si.district =  #{accountInstanceTenantBo.district}
                </if>

                <if test="accountInstanceTenantBo.orderType != null">
                    AND oi.type =  #{accountInstanceTenantBo.orderType}
                </if>
                <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                    AND oi.store_id = #{accountInstanceTenantBo.storeId}
                </if>
                <if test="accountInstanceTenantBo.startDate != null">
                    AND DATE(oi.dt) &gt;= #{accountInstanceTenantBo.startDate}
                </if>
                <if test="accountInstanceTenantBo.endDate != null">
                    AND DATE(oi.dt) &lt;= #{accountInstanceTenantBo.endDate}
                </if>
                and itt.rule_num = 100001 and itt.content is not null
                and oi.pay_state = 1 and oi.refund <![CDATA[ <> ]]> 1
            </where>
            group by oi.account_id HAVING sum(oi.amount) <![CDATA[ > ]]>  #{accountInstanceTenantBo.frequencyStartCount} and sum(oi.amount) <![CDATA[ < ]]> #{accountInstanceTenantBo.frequencyEndCount}
            ) tab
    </select>

    <select id="selectAccountConsumptionTenantStatisticsCustomer" parameterType="org.dows.account.bo.AccountInstanceTenantBo" resultType="org.dows.account.vo.AccountConsumptionVo">

        select count(1) as preCount from (
        select
        ai.account_id
        from account_instance ai
        left join order_instance oi on oi.account_id=ai.account_id
        left join store_instance si on si.store_id = ai.store_id
        <where>
            <if test="accountInstanceTenantBo.storeName != null and accountInstanceTenantBo.storeName != ''">
                AND si.store_name =  like concat('%',#{accountInstanceTenantBo.storeName},'%')
            </if>
            <if test="accountInstanceTenantBo.storeBrand != null">
                AND si.store_brand =  #{accountInstanceTenantBo.storeBrand}
            </if>

            <if test="accountInstanceTenantBo.storeType != null">
                AND si.store_type =  #{accountInstanceTenantBo.storeType}
            </if>
            <if test="accountInstanceTenantBo.storePattern != null">
                AND si.store_pattern =  #{accountInstanceTenantBo.storePattern}
            </if>

            <if test="accountInstanceTenantBo.district != null and accountInstanceTenantBo.district != ''">
                AND si.district =  #{accountInstanceTenantBo.district}
            </if>

            <if test="accountInstanceTenantBo.orderType != null">
                AND oi.type =  #{accountInstanceTenantBo.orderType}
            </if>
            <if test="accountInstanceTenantBo.storeId != null and accountInstanceTenantBo.storeId != ''">
                AND ai.store_id = #{accountInstanceTenantBo.storeId}
            </if>
            <if test="accountInstanceTenantBo.startDate != null">
                AND DATE(ai.dt) &gt;= #{accountInstanceTenantBo.startDate}
            </if>
            <if test="accountInstanceTenantBo.endDate != null">
                AND DATE(ai.dt) &lt;= #{accountInstanceTenantBo.endDate}
            </if>
            and oi.pay_state = 1 and oi.refund <![CDATA[ <> ]]> 1 and oi.dt &gt;= subdate(#{accountInstanceTenantBo.endDate},#{accountInstanceTenantBo.distributionCount})
            group by ai.account_id
        </where>
        ) tab

    </select>

    <select id="queryAccountIdList" resultType="String">
        SELECT
        t1.account_id
        FROM
        account_instance t1
        WHERE 1=1

        <if test="keyword != null and keyword != ''">
            AND (phone like concat('%',#{keyword},'%') or account_name like concat('%',#{keyword},'%'))
        </if>
    </select>


</mapper>
